/* 
Este CSS terá algumas observações que serão feitas nas partes mais importantes  */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.page {
  width: 736px;
  margin: 0 auto;
}

header {
  width: 319px;
  margin-top: 74px;
}
body::before {
  content: "";
  top: 0;
  left: 0;
  width: 100%;
  height: 360px;
  background-color: #121214;
  position: absolute;
  z-index: -1;
}

body,
input,
button,
textarea {
  font-family: "Popins", sans-serif;
}

body {
  background-color: #e5e5e5;
}

h1 {
  font-family: "Archivo", sans-serif;
  font-weight: bold;
  font-size: 36px;
  line-height: 42px;
  color: white;
  margin-bottom: 24px;
}
p {
  font-size: 16px;
  line-height: 26px;
  color: #42d3ff;
}

form {
  margin-top: 38px;
  background-color: #fafafc;
  border-radius: 8px;
  min-height: 300px;
  padding: 64px;
  display: flex;
  flex-direction: column;
  gap: 48px;
}

fieldset {
  border: none;
}

.fieldset-wrapper {
  display: flex;
  flex-direction: column;
  gap: 24px;
}
 /* Tivemos que criar uma div que contenha todo o  */


fieldset legend {
  font-family: "Archivo", sans-serif;
  font-style: normal;
  font-weight: 600;
  font-size: 24px;
  line-height: 34px;
  width: 100%;
  border-bottom: 1px solid #e6e6f0;
  padding-bottom: 16px;
}

.input-wrapper {
  display: flex;
  flex-direction: column;
}
.input-wrapper label, 
.checkbox-wrapper label {
  font-size: 14px;
  line-height: 24px;
  color: #4e4958;
  margin-bottom: 8px;
}

.input-wrapper label span {
  margin-left: 12px;
  font-size: 12px;
  line-height: 20px;
  color: #c1bccc;
}

.input-wrapper label span:hover {
  color: #4e4958;
}

.input-wrapper input,
.input-wrapper textarea,
.input-wrapper select {
  background: #fafafc;
  height: 56px;
  border: 1px solid #e6e6f0;
  border-radius: 8px;
  padding: 0 24px;
  font-size: 16px;
  line-height: 26px;
  color: #c1bccc;
}

.input-wrapper textarea {
  height: 168px;
}

.fieldset-wrapper select {
  appearance: none;
  -webkit-appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0_1_54)'%3E%3Cpath d='M8 10L12 14L16 10' stroke='%239C98A6' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0_1_54'%3E%3Crect width='24' height='24' fill='white'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A");
  background-repeat: no-repeat;
  background-position: right 24px top 50%;
}
/* 
Para fazer o fundo da barra de select, tiramos do figma o elemento em SVG e utilizando a conversão para CSS colamos aqui
Foi feito um ajuste de não repetir o fundo e posicionar de forma fica de acordo com o figma (canto direito no meio)  */


.col-3 {
  display: flex;
  gap: 20px;
}

.col-3 > div:nth-child(1) {
  width: 100%;
}
/* 
Aqui fizemos com que entre na classe .col-3 e o primeiro filho da div tenha 100% de largura, ou seja, ele vai ocupar todo o espaço disponível, e o segundo filho em diante da div vai ocupar o espaço restante,com um gap de 20px entre eles  */

.checkbox-wrapper {
  position: relative;
}

.checkbox-wrapper label {
  display: flex;
  align-items: center;
  gap: 16px;
  margin: 0;
  
}

.checkbox-wrapper input {
position: absolute;
  opacity: 0;
  height: 24px;
  width: 24px;
}

.checkbox-wrapper label::before {
  content: "";
  width: 24px;
  height: 24px;
  border: 1px solid #e6e6f0;
  border-radius: 8px;
  display: block;
}

.checkbox-wrapper input:checked + label::before {
  background-image: url("data:image/svg+xml,%3Csvg width='18' height='14' viewBox='0 0 18 14' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M6 11.17L1.83 7L0.410004 8.41L6 14L18 2L16.59 0.589996L6 11.17Z' fill='%2342D3FF'/%3E%3C/svg%3E%0A");
 
  background-repeat: no-repeat;
  background-position: center;
}

.checkbox-wrapper input:focus + label::before {
  outline: 2px solid black;
}
/* 
No código do checkbox, o seguinte foi feito para criar um estilo customizado:

1. O checkbox (input) foi posicionado de forma absoluta, ficando sobre o label.
2. O label foi posicionado de forma relativa para servir de referência ao input.
3. O label foi estilizado com um `::before` para simular a aparência de um checkbox.
4. Quando o input está marcado (checked), o `::before` muda de cor e um ícone de check (SVG) aparece no centro.
5. Quando o input está focado, o `::before` recebe um contorno preto (outline).

Essas alterações combinadas permitem que o checkbox tenha um estilo personalizado e interativo.
 */ 